<Project>

  <PropertyGroup>
    <!-- This is the version number of the nuget that the plugins will references. -->
    <ConnectQlPluginReferenceVersion>0.1.137-prerelease</ConnectQlPluginReferenceVersion>
    <IncludeSymbols>true</IncludeSymbols>
  </PropertyGroup>

  <PropertyGroup>
    <DocumentationFile>bin\doc\$(AssemblyName).xml</DocumentationFile>
    <NoWarn>CS2002;1701;1702;1705;SA1408;SA1407;SA1134</NoWarn>
    <Product>$(AssemblyName) ($(TargetFramework))</Product>
    <VersionPrefix Condition="'$(VersionPrefix)' == ''">$(APPVEYOR_BUILD_VERSION)</VersionPrefix>
    <!-- Set the version to something ridiculously high, so we always override nuget-packages. -->
    <VersionPrefix Condition="'$(VersionPrefix)' == ''">100.0.1</VersionPrefix>
    <VersionSuffix Condition="'$(APPVEYOR_REPO_BRANCH)'!='master'">prerelease</VersionSuffix>
    <VersionSuffix Condition="'$(APPVEYOR_REPO_BRANCH)'=='master'"></VersionSuffix>
    <VersionSuffix Condition="'$(APPVEYOR_PULL_REQUEST_NUMBER)'!=''">pullrequest-$(APPVEYOR_PULL_REQUEST_NUMBER)</VersionSuffix>
    <AssemblyVersion>$(VersionPrefix).0</AssemblyVersion>
    <PackageRequireLicenseAcceptance>False</PackageRequireLicenseAcceptance>
    <PackageLicenseUrl>https://raw.githubusercontent.com/MaartenX/ConnectQl/master/LICENSE</PackageLicenseUrl>
    <PackageTags>ConnectQl;SQL;querying</PackageTags>
    <RepositoryType>git</RepositoryType>
    <RepositoryUrl>https://github.com/MaartenX/ConnectQl.github.io</RepositoryUrl>
    <Copyright>Copyright (c) 2017 Maarten van Sambeek</Copyright>
    <PackageProjectUrl>https://github.com/MaartenX/ConnectQl</PackageProjectUrl>
    <PackageIconUrl>https://raw.githubusercontent.com/MaartenX/ConnectQl/master/ConnectQl.png</PackageIconUrl>
    <MinClientVersion>3.4</MinClientVersion>
    <Authors>Maarten van Sambeek</Authors>
    <DevelopingLocally Condition="'$(APPVEYOR)'==''">true</DevelopingLocally>
    <DevelopingLocally Condition="'$(APPVEYOR)'!=''">false</DevelopingLocally>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="StyleCop.Analyzers" Version="1.0.2">
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="Scripty.Msbuild" Version="0.7.4.1">
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
  </ItemGroup>

  <PropertyGroup Condition="'$(Configuration)' == 'Release' And Exists('$(MSBuildThisFileDirectory)..\key\Key.snk')">
    <SignAssembly>True</SignAssembly>
    <AssemblyOriginatorKeyFile>$(MSBuildThisFileDirectory)..\..\key\Key.snk</AssemblyOriginatorKeyFile>
    <DelaySign>False</DelaySign>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)' == 'Debug' Or !Exists('$(MSBuildThisFileDirectory)..\key\Key.snk')">
    <SignAssembly>False</SignAssembly>
  </PropertyGroup>

  <PropertyGroup Condition="'$(TargetFramework)' == 'portable-net45+win8+wpa81+wp8'">
    <TargetFrameworkIdentifier>.NETPortable</TargetFrameworkIdentifier>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <TargetFrameworkProfile>Profile259</TargetFrameworkProfile>
    <NugetTargetMoniker>.NETPortable,Version=v0.0,Profile=Profile259</NugetTargetMoniker>
    <LanguageTargets>$(MSBuildExtensionsPath32)\Microsoft\Portable\$(TargetFrameworkVersion)\Microsoft.Portable.CSharp.targets</LanguageTargets>
    <IncludeProjectPriFile>false</IncludeProjectPriFile>
  </PropertyGroup>

  <PropertyGroup Condition="'$(TargetFramework)' == 'portable-net451+win81+wpa81'">
    <TargetFrameworkIdentifier>.NETPortable</TargetFrameworkIdentifier>
    <TargetFrameworkVersion>v4.6</TargetFrameworkVersion>
    <TargetFrameworkProfile>Profile151</TargetFrameworkProfile>
    <NugetTargetMoniker>.NETPortable,Version=v0.0,Profile=Profile151</NugetTargetMoniker>
    <LanguageTargets>$(MSBuildExtensionsPath32)\Microsoft\Portable\$(TargetFrameworkVersion)\Microsoft.Portable.CSharp.targets</LanguageTargets>
    <IncludeProjectPriFile>false</IncludeProjectPriFile>
  </PropertyGroup>

  <ItemGroup Condition="'$(TargetFramework)' == 'portable-net45+win8+wpa81+wp8'">
    <TargetPlatform Include="WindowsPhoneApp, Version=8.1" />
    <TargetPlatform Include="Windows, Version=8.0" />
    <TargetPlatform Include="WindowsPhoneApp, Version=8.0" />
    <TargetPlatform Include=".NETFramework, Version=4.5" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)' == 'portable-net451+win81+wpa81'">
    <TargetPlatform Include="WindowsPhoneApp, Version=8.1" />
    <TargetPlatform Include="Windows, Version=8.1" />
    <TargetPlatform Include=".NETFramework, Version=4.5.1" />
  </ItemGroup>

  <!--<Target Name="RetrieveExistingVersions" BeforeTargets="GenerateNuspec" DependsOnTargets="_CalculateInputsOutputsForPack">
    <XmlPeek Namespaces="&lt;Namespace Prefix='p' Uri='http://schemas.microsoft.com/packaging/2013/01/nuspec.xsd'/&gt;"
             XmlInputPath="$(RestoreOutputAbsolutePath)$(PackageId).$(PackageVersion).nuspec"
             Query="/p:package/p:metadata/p:dependencies/p:group/p:dependency/@id">
      <Output TaskParameter="Result" ItemName="NugetReferences" />
    </XmlPeek>
    <PropertyGroup>
      <Prefix></Prefix>
      <Suffix></Suffix>
    </PropertyGroup>
    <ItemGroup>
      <Commands Include="@(NugetReferences)">
        <Command>powershell -command &quot;$a = '%(Identity)'; try { write-host ($a + '|' + ((irm -ErrorAction Ignore ('https://www.myget.org/F/connectql/api/v3/flatcontainer/' + $a.ToLower() + '/index.json')).versions | sort -Descending)[0]) } catch { } $lastexitcode = 0&quot;</Command>
      </Commands>
    </ItemGroup>
    <Exec Command="%(Commands.Command)" ConsoleToMSBuild="true" EchoOff="true">
      <Output TaskParameter="ConsoleOutput" ItemName="NugetVersions" />
    </Exec>
    <ItemGroup>
      <NugetUpdates Include="@(NugetVersions)">
        <Id>$([System.String]::Copy('%(Identity)').Split('|')[0])</Id>
        <Version>$([System.String]::Copy('%(Identity)').Split('|')[1])</Version>
      </NugetUpdates>
    </ItemGroup>
    <Message Importance="high" Text="/p:package/p:metadata/p:dependencies/p:group/p:dependency[@id='%(NugetUpdates.Id)']" />
    <XmlPoke Namespaces="&lt;Namespace Prefix='p' Uri='http://schemas.microsoft.com/packaging/2013/01/nuspec.xsd'/&gt;"
             XmlInputPath="$(RestoreOutputAbsolutePath)$(PackageId).$(PackageVersion).nuspec"
             Query="/p:package/p:metadata/p:dependencies/p:group/p:dependency[@id='%(NugetUpdates.Id)']/@version"
             Value="%(NugetUpdates.Version)" />
  </Target>-->

</Project>